{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/pages/blog.js"],"names":["data","site","siteMetadata","author","React","useState","menuOpen","setMenuOpen","className","classes","header","title","globalClasses","iconWrapper","btn","onClick","role","menuOpenIcon","width","height","lineTop","x1","y1","x2","y2","lineBottom","menuOverlay","open","btnCloseMenu","iconLight","menu","navItem","activeClassName","navItemActive","to","props","container","Header","content","children","Footer","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Blog","posts","allContentfulBlogPost","edges","map","edge","index","key","node","slug","publishedDate","timeToRead"],"mappings":"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","file":"component---src-pages-blog-js-cdef0ad451cc9635a69f.js","sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `);\n\n  return (\n    <footer>\n      <p>2020 Â© {data.site.siteMetadata.author}</p>\n    </footer>\n  );\n};\n","import React from 'react';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\n\nimport globalClasses from '../styles/modules/global.module.scss';\nimport classes from '../styles/modules/header.module.scss';\n\nexport default () => {\n  const [menuOpen, setMenuOpen] = React.useState(false);\n\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const handleMenuOpen = () => {\n    setMenuOpen(true);\n  };\n\n  const handleMenuClose = () => {\n    setMenuOpen(false);\n  };\n\n  return (\n    <header className={classes.header}>\n      <div>\n        <span className={classes.title}>{data.site.siteMetadata.title}</span>\n      </div>\n      <div\n        className={`${globalClasses.iconWrapper} ${globalClasses.btn}`}\n        onClick={handleMenuOpen}\n        role=\"button\"\n      >\n        <svg className={classes.menuOpenIcon} width=\"24\" height=\"24\">\n          <line className={classes.lineTop} x1=\"2\" y1=\"8\" x2=\"22\" y2=\"8\" />\n          <line className={classes.lineBottom} x1=\"6\" y1=\"14\" x2=\"22\" y2=\"14\" />\n        </svg>\n      </div>\n      <div className={`${classes.menuOverlay} ${menuOpen ? classes.open : ''}`}>\n        <div\n          onClick={handleMenuClose}\n          className={`${globalClasses.iconWrapper} ${globalClasses.btn} ${classes.btnCloseMenu}`}\n          role=\"button\"\n        >\n          <svg className={globalClasses.iconLight} width=\"18\" height=\"18\">\n            <line x1=\"1\" y1=\"17\" x2=\"17\" y2=\"1\" />\n            <line x1=\"1\" y1=\"1\" x2=\"17\" y2=\"17\" />\n          </svg>\n        </div>\n        <ul className={classes.menu}>\n          <li>\n            <Link\n              className={classes.navItem}\n              activeClassName={classes.navItemActive}\n              to=\"/\"\n            >\n              Home\n              <svg width=\"100%\" height=\"2\">\n                <line x1=\"0\" y1=\"1\" x2=\"100%\" y2=\"1\" />\n              </svg>\n            </Link>\n          </li>\n          <li>\n            <Link\n              className={classes.navItem}\n              activeClassName={classes.navItemActive}\n              to=\"/blog\"\n            >\n              Blog\n              <svg width=\"100%\" height=\"2\">\n                <line x1=\"0\" y1=\"1\" x2=\"100%\" y2=\"1\" />\n              </svg>\n            </Link>\n          </li>\n          <li>\n            <Link\n              className={classes.navItem}\n              activeClassName={classes.navItemActive}\n              to=\"/about\"\n            >\n              About\n              <svg width=\"100%\" height=\"2\">\n                <line x1=\"0\" y1=\"1\" x2=\"100%\" y2=\"1\" />\n              </svg>\n            </Link>\n          </li>\n          <li>\n            <Link\n              className={classes.navItem}\n              activeClassName={classes.navItemActive}\n              to=\"/contact\"\n            >\n              Contact{' '}\n              <svg width=\"100%\" height=\"2\">\n                <line x1=\"0\" y1=\"1\" x2=\"100%\" y2=\"1\" />\n              </svg>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\n\nimport Footer from './Footer';\nimport Header from './Header';\n\nimport '../styles/main.scss';\nimport classes from '../styles/modules/layout.module.scss';\n\nexport default props => {\n  return (\n    <div className={classes.container}>\n      <Header />\n      <main className={classes.content}>{props.children}</main>\n      <Footer />\n    </div>\n  );\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\n\nimport Layout from '../components/Layout';\n\nconst Blog = () => {\n  const posts = useStaticQuery(graphql`\n    query {\n      allContentfulBlogPost(sort: { fields: publishedDate, order: DESC }) {\n        edges {\n          node {\n            title\n            slug\n            publishedDate(formatString: \"MMMM Do, YYYY\")\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout>\n      <h1>blog</h1>\n      {posts.allContentfulBlogPost.edges.map((edge, index) => {\n        return (\n          <div key={index}>\n            <Link to={`/blog/${edge.node.slug}`}>\n              <h2>{edge.node.title}</h2>\n              <p>{edge.node.publishedDate}</p>\n            </Link>\n            <div>\n              <span>{edge.node.timeToRead}min read</span>\n            </div>\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default Blog;\n"],"sourceRoot":""}